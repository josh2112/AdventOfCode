Example 029A:
-------------
<vA<AA>>^AvAA<^A>A<v<A>>^AvA^A<vA>^A<v<A>^A>AAvA^A<v<A>A>^AAAvA<^A>A (68)
v<<A>>^A<A>AvA<^AA>A<vAAA>^A (28)
<A^A>^^AvvvA (12)

My result:
<v<A>A<A>^>AvA<^Av>A^A<v<A>^>AvA^A<v<A>^>AA<vA>A^A<A>A<v<A>A^>AAA<Av>A^A (72)
<v<A>^>A<A>A<AAv>A^A<vAAA^>A (28)
<A^A^^>AvvvA (12)

Problem: "stairstepping"  ex: "<v<" instead of "<<v"
the next robot in line has to change buttons twice instead of once
could group the button presses together, i.e. break up and sort sequences between the A's, but how to make sure that a gap isn't passed?
 * for the numeric keypad, do all > before v and do all ^ before <
 * for the directionl keypad, do all > before ^ and all v before <


Example:
029A: <vA<AA>>^AvAA<^A>A<v<A>>^AvA^A<vA>^A<v<A>^A>AAvA^A<v<A>A>^AAAvA<^A>A (68)
980A: <v<A>>^AAAvA^A<vA<AA>>^AvAA<^A>A<v<A>A>^AAAvA<^A>A<vA>^A<A>A         (60)
179A: <v<A>>^A<vA<A>>^AAvAA<^A>A<v<A>>^AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A (68)
456A: <v<A>>^AA<vA<A>>^AAvAA<^A>A<vA>^A<A>A<vA>^A<A>A<v<A>A>^AAvA<^A>A     (64)
379A: <v<A>>^AvA^A<vA<AA>>^AAvA<^A>AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A     (64)

# Mine: too short for 3 & 4 - are they going through blank spaces?
v<A<AA>>^AvAA^<A>Av<<A>>^AvA^Av<A>^A<Av<A>>^AAvA^Av<A<A>>^AAAvA^<A>A (68)
v<<A>>^AAAvA^Av<A<AA>>^AvAA^<A>Av<A<A>>^AAAvA^<A>Av<A>^A<A>A (60)
v<A<AA>>^AAvA^<A>AvA^Av<<A>>^AAvA^Av<A>^AA<A>Av<A<A>>^AAAvA^<A>A (64)
v<A<AA>>^AAvA^<A>AAvA^Av<A>^A<A>Av<A>^A<A>Av<A<A>>^AAvA^<A>A (60)
v<<A>>^AvA^Av<A<AA>>^AAvA^<A>AAvA^Av<A>^AA<A>Av<A<A>>^AAAvA^<A>A (64)


Real 379A: <v<A>>^AvA^A<vA<AA>>^AAvA<^A>AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A
              <   A > A  v <<
My 379A:   v<<A>>^AvA^Av<<A>>^AAv<A<A>>^AAvAA^<A>Av<A>^AA<A>Av<A<A>>^AAAvA^<A>A
              <   A > A   <   AA


From example:
checking: <v<A>>^AvA^A<vA<AA>>^AAvA<^A>AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A
results in: <A>Av<<AA>^AA>AvAA^A<vAAA>^A
checking: <A>Av<<AA>^AA>AvAA^A<vAAA>^A
results in: ^A<<^^A>>AvvvA
checking: ^A<<^^A>>AvvvA
results in: 379A

From mine:
checking: v<<A>>^AvA^Av<<A>>^AAv<A<A>>^AAvAA^<A>Av<A>^AA<A>Av<A<A>>^AAAvA^<A>A
results in: <A>A<AAv<AA>>^AvAA^Av<AAA>^A
checking: <A>A<AAv<AA>>^AvAA^Av<AAA>^A
results in: ^A^^<<A>>AvvvA
checking: ^A^^<<A>>AvvvA
results in: 379A

mine:
  v<<A>>^AvA^Av<<A>>^AAv<A<A>>^AAvAA^<A>Av<A>^AA<A>Av<A<A>>^AAAvA^<A>A  (68)
     <   A > A   <   AA  v <   AA >>  ^ A  v  AA ^ A  v <   AAA >  ^ A
         ^   A       ^^        <<       A     >>   A        vvv      A
             3                          7          9                 A

theirs:
  <v<A>>^AvA^A<vA<AA>>^AAvA<^A>AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A      (64)
     <   A > A  v <<   AA >  ^ AA > A  v  AA ^ A   < v  AAA >  ^ A
         ^   A         <<      ^^   A     >>   A        vvv      A
             3                      7          9                 A

3 -> 7
 theirs uses this sequence: '  v <<   AA >  ^ AA > A      which results in 23 presses
 mine uses this sequence:   '   <   AA  v <   AA >>  ^ A  which results in 27 presses

 for each movement on door keypad (A->3, 3->7, 7->9, etc.) calculate all valid paths (avoiding " ")
  - x2:
    - for each of those valid paths, calculate valid path, keeping only the lowest ones

theirs:     <v<A>>^AvA^A<vA<AA>>^AAvA<^A>AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A
mine (new): <v<A>>^AvA^A<vA<AA>>^AAvA<^A>AAvA^A<vA>^AA<A>A<v<A>A>^AAAvA<^A>A